{
  "type": "data-flow",
  "appVersion": "1.19.3",
  "properties": {
    "meta": {
      "comment": {
        "markdown": {
          "text": {
            "text": "##### INFO\n\nFolgende Spalten sind enthalten:\n\n- Kreis - Name des Kreises, auf dessen Gebiet sich die Anlage befindet\n- Gemeinde - Name der Gemeinde, auf deren Gebiet sich die Anlage befindet\n- Anlage - Bezeichnung der Anlage\n- Inbetriebnahme - Jahr der Inbetriebnahme\n- Leistung - Leistung der Anlage (Zahl mit Maßeinheit, Dezimaltrennzeichen ist Punkt)\n- Nabenhöhe - Nabenhöhe in Metern - Dezimaltrenner ist Komma, bei in Genehmigung befindlichen Anlagen kann Text enthalten sein\n- Rotordurchmesser - Rotordurchmesser in Metern - Dezimaltrenner ist Komma, bei in Genehmigung befindlichen Anlagen kann Text enthalten sein\n- Ostwert - Ostwert bzw. Rechtswert der geographischen Position\n- Nordwert - Nordwert bzw. Hochwert der geographischen Position\n- Status - Status der Angabe. Hier sind folgende Werte möglich: \"in Betrieb\", \"vor Inbetriebnahme\", \"im Gen.Verf.\" = im Genehmigungsverfahren\n\nNotes: \n- Als Koordinatenbezugssystem (KBS bzw. CRS) wird EPSG:4647 verwendet.\n- Ostwert und Nordwert sind UTM Koordinaten. Der Ostwert hat am Anfang zwei Ziffern für die Zone\n- Eine Angabe für Hemisphäre ist nicht vorhanden. (in Deutschland immer \"U\" bzw. Zone \"32U\")\n- Die CSV Datei hat weniger Spalten als das Excel Sheet und auch eine andere Aufteilung\n\n",
            "syntax": "markdown",
            "size": {
              "width": "100%",
              "height": "100%"
            }
          },
          "size": {
            "width": null,
            "height": 572
          },
          "view": "preview"
        },
        "editor": {
          "collapsed": false
        }
      },
      "showingComment": true
    },
    "editor": {
      "showParameters": true,
      "showVariables": true,
      "showServices": true,
      "dialogWidth": "wide"
    },
    "imports": {
      "code": "# import the standard library\nimport strings from 'std';\n\n# importieren des Moduls zum konvertieren\nimport vars as converter from './utm_conversion.tsm';\n",
      "size": {
        "width": 0,
        "height": 131
      },
      "editor": {
        "collapsed": false
      }
    },
    "parameters": {
      "parameters": {
        "list": []
      },
      "editor": {
        "collapsed": false
      }
    },
    "variables": {
      "variables": {
        "list": []
      },
      "editor": {
        "collapsed": false
      }
    },
    "services": {
      "services": {
        "list": []
      },
      "editor": {
        "collapsed": false
      }
    }
  },
  "steps": [
    {
      "id": "com.twineworks.tweakstreet.library.steps.input.csvinput_ea718cd8-0061-4c52-8bb8-ee72b6155f63",
      "name": "CSV Input: WIndanlagen",
      "type": "com.twineworks.tweakstreet.library.steps.input.csvinput",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "CSV Input: WIndanlagen",
          "showingComment": true,
          "comment": {
            "markdown": {
              "text": {
                "text": "##### INFO\n\nEs ist zusätzlich zur CSV Datei auch ein Excel Sheet vorhanden, es ist aber etwas anders aufgebaut.",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 115
              },
              "view": "preview"
            },
            "editor": {
              "collapsed": false
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "tabs": {},
        "fs": {
          "widgetType": "expression/storage-ref",
          "widgetData": {
            "name": ""
          },
          "code": "nil"
        },
        "file": {
          "widgetType": "expression/local-file",
          "widgetData": {
            "interpolation": true,
            "text": "./data/input/WKA-OpenData_2019-12-10.csv",
            "dialogIntent": "openFile"
          },
          "code": "'./data/input/WKA-OpenData_2019-12-10.csv'"
        },
        "compression": {
          "widgetType": "expression/select",
          "widgetData": {
            "family": "expression/select/compression",
            "value": "none"
          },
          "code": "'none'"
        },
        "charset": {
          "widgetType": "expression/charset",
          "widgetData": {
            "value": "UTF-8"
          },
          "code": "'UTF-8'"
        },
        "textFileContent": {
          "text": "",
          "fetchButton": {
            "value": "100"
          },
          "size": {
            "width": 0,
            "height": 180
          },
          "editor": {
            "collapsed": true
          }
        },
        "skipLines": {
          "widgetType": "expression/number",
          "widgetData": {
            "text": "0"
          },
          "code": "0"
        },
        "rowLimit": {
          "widgetType": "expression/nil",
          "widgetData": {},
          "code": "nil"
        },
        "fieldSeparator": {
          "widgetType": "expression/separator",
          "widgetData": {
            "value": "tab"
          },
          "code": "\"\\t\""
        },
        "fieldEncloser": {
          "widgetType": "expression/string",
          "widgetData": {
            "interpolation": true,
            "text": ""
          },
          "code": "''"
        },
        "hasHeaderLine": {
          "widgetType": "expression/checkbox-boolean",
          "widgetData": {
            "value": true
          },
          "code": "true"
        },
        "readFields": {
          "readFields": {
            "list": [
              {
                "name": "KREIS",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "KREIS"
                  },
                  "code": "'KREIS'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "Gemeinde",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "Gemeinde"
                  },
                  "code": "'Gemeinde'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "Anlage",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "Anlage"
                  },
                  "code": "'Anlage'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "Inbetriebnahme",
                "type": "long",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "Inbetriebnahme"
                  },
                  "code": "'Inbetriebnahme'"
                },
                "conversion": {
                  "widgetType": "expression/parse-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "0"
                      },
                      "code": "'0'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "trim": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": true
                      },
                      "code": "true"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "parseDecimal": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": false
                      },
                      "code": "false"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_parser: (string pattern, string locale, boolean trim, string nilValue, boolean parseDecimal) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Parsers$number_parser'};\n}\nmake_parser('0', 'en-US', true, '', false)\n"
                }
              },
              {
                "name": "Leistung",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "Leistung"
                  },
                  "code": "'Leistung'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "Nabenhöhe",
                "type": "double",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "Nabenhöhe"
                  },
                  "code": "'Nabenhöhe'"
                },
                "conversion": {
                  "widgetType": "expression/parse-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "#,##0"
                      },
                      "code": "'#,##0'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "trim": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": true
                      },
                      "code": "true"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "parseDecimal": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": false
                      },
                      "code": "false"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_parser: (string pattern, string locale, boolean trim, string nilValue, boolean parseDecimal) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Parsers$number_parser'};\n}\nmake_parser('#,##0', 'en-US', true, '', false)\n"
                }
              },
              {
                "name": "Rotordurchmesser",
                "type": "double",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "Rotordurchmesser"
                  },
                  "code": "'Rotordurchmesser'"
                },
                "conversion": {
                  "widgetType": "expression/parse-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "#,##0"
                      },
                      "code": "'#,##0'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "trim": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": true
                      },
                      "code": "true"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "parseDecimal": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": false
                      },
                      "code": "false"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_parser: (string pattern, string locale, boolean trim, string nilValue, boolean parseDecimal) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Parsers$number_parser'};\n}\nmake_parser('#,##0', 'en-US', true, '', false)\n"
                }
              },
              {
                "name": "Ostwert",
                "type": "long",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "Ostwert"
                  },
                  "code": "'Ostwert'"
                },
                "conversion": {
                  "widgetType": "expression/parse-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "0"
                      },
                      "code": "'0'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "trim": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": true
                      },
                      "code": "true"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "parseDecimal": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": false
                      },
                      "code": "false"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_parser: (string pattern, string locale, boolean trim, string nilValue, boolean parseDecimal) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Parsers$number_parser'};\n}\nmake_parser('0', 'en-US', true, '', false)\n"
                }
              },
              {
                "name": "Nordwert",
                "type": "long",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "Nordwert"
                  },
                  "code": "'Nordwert'"
                },
                "conversion": {
                  "widgetType": "expression/parse-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "0"
                      },
                      "code": "'0'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "trim": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": true
                      },
                      "code": "true"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "parseDecimal": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": false
                      },
                      "code": "false"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_parser: (string pattern, string locale, boolean trim, string nilValue, boolean parseDecimal) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Parsers$number_parser'};\n}\nmake_parser('0', 'en-US', true, '', false)\n"
                }
              },
              {
                "name": "Status",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "Status"
                  },
                  "code": "'Status'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": false
        },
        "model": {}
      },
      "pos": {
        "x": 170,
        "y": 122
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.flatmap.datatable_a61d6d93-5e8c-4dd7-ad61-566667f5cba6",
      "name": "Data Table: status code",
      "type": "com.twineworks.tweakstreet.library.steps.flatmap.datatable",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Data Table: status code",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "items": {
          "widgetType": "expression/data-grid",
          "widgetData": {
            "fields": [
              {
                "id": "id",
                "name": "status"
              },
              {
                "id": "name",
                "name": "status_code"
              }
            ],
            "gen": {
              "as": "rows",
              "of": "dict",
              "meta": false
            },
            "table": {
              "list": [
                {
                  "fields": {
                    "id": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": "im Gen.Verf."
                      },
                      "code": "'im Gen.Verf.'"
                    },
                    "name": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": "inaktiv"
                      },
                      "code": "'inaktiv'"
                    }
                  }
                },
                {
                  "fields": {
                    "id": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": "in Betrieb"
                      },
                      "code": "'in Betrieb'"
                    },
                    "name": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": "aktiv"
                      },
                      "code": "'aktiv'"
                    }
                  }
                },
                {
                  "fields": {
                    "id": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": "vor Inbetriebnahme"
                      },
                      "code": "'vor Inbetriebnahme'"
                    },
                    "name": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": "inaktiv"
                      },
                      "code": "'inaktiv'"
                    }
                  }
                }
              ]
            }
          },
          "code": "[{\n  :status 'im Gen.Verf.',\n  :status_code 'inaktiv'\n}, {\n  :status 'in Betrieb',\n  :status_code 'aktiv'\n}, {\n  :status 'vor Inbetriebnahme',\n  :status_code 'inaktiv'\n}]"
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": [
              {
                "name": "Status",
                "type": "string",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "results.row[:status]",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "results.row[:status]"
                }
              },
              {
                "name": "Status Art",
                "type": "string",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "results.row[:status_code]",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "results.row[:status_code]"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": true
        },
        "model": {}
      },
      "pos": {
        "x": 410,
        "y": 330
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.streamlookup.streamlookup_366d5789-3eba-43c0-9874-2dd6507431b2",
      "name": "Stream Lookup",
      "type": "com.twineworks.tweakstreet.library.steps.streamlookup.streamlookup",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Stream Lookup",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "keyFields": {
          "fieldPairs": {
            "list": [
              {
                "left": {
                  "value": {
                    "gate": "in",
                    "name": "Status"
                  }
                },
                "right": {
                  "value": {
                    "gate": "lookup",
                    "name": "Status"
                  }
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": [
              {
                "name": "Status Art",
                "type": "string",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "results.lookup[:`Status Art`] default nil",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "results.lookup[:`Status Art`] default nil"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "fetchFields": {
          "value": "lookup_"
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": true
        },
        "model": {}
      },
      "pos": {
        "x": 410,
        "y": 122
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.map.dummy_9f319d65-576c-4ae5-bce6-f5ada276a956",
      "name": "Dummy",
      "type": "com.twineworks.tweakstreet.library.steps.map.dummy",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Dummy",
          "comment": {
            "markdown": {
              "text": {
                "text": ""
              },
              "size": {
                "width": null,
                "height": 160
              },
              "editor": {
                "collapsed": true
              }
            }
          },
          "showingComment": false
        },
        "editor": {}
      },
      "pos": {
        "x": 1114,
        "y": 122
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.map.calculator_eafb616b-532b-4d3b-a0c7-d55817c49e14",
      "name": "Calculator: split",
      "type": "com.twineworks.tweakstreet.library.steps.map.calculator",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Calculator: split",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": [
              {
                "name": "splitter",
                "type": "any",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "(x) -> strings.split(x, \" \")",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "(x) -> strings.split(x, \" \")"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": [
              {
                "name": "Leistung",
                "type": "long",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "vars.splitter(in.Leistung)[0]",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "vars.splitter(in.Leistung)[0]"
                }
              },
              {
                "name": "Leistungseinheit",
                "type": "string",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "vars.splitter(in.Leistung)[1]",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "vars.splitter(in.Leistung)[1]"
                }
              },
              {
                "name": "UTM Zone",
                "type": "long",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "strings.substring(in.Ostwert,0,2) ",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "strings.substring(in.Ostwert,0,2)"
                }
              },
              {
                "name": "Ostwert",
                "type": "long",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "# the zone info at the beginning needs to be removed\nstrings.substring(in.Ostwert,2)",
                    "size": {
                      "width": 0,
                      "height": 62
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "# the zone info at the beginning needs to be removed\nstrings.substring(in.Ostwert,2)\n"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": true,
          "showOutputFields": true
        },
        "model": {}
      },
      "pos": {
        "x": 602,
        "y": 122
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.map.calculator_867cc4b4-0057-435e-9fd3-1af49e691ea6",
      "name": "Calculator: UTM to Lat/Long using module",
      "type": "com.twineworks.tweakstreet.library.steps.map.calculator",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Calculator: UTM to Lat/Long using module",
          "showingComment": true,
          "comment": {
            "markdown": {
              "text": {
                "text": "##### INFO\n\ndas Modul \"utm_conversion.tsm\" enthält die Rechenroutinen zum konvertieren von UTM Koordinaten in Längengrad/Breitengrad \nund die Konvertierung von den dezimalen Werten in Grad, Minuten und Sekunden.",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 127
              },
              "view": "preview"
            },
            "editor": {
              "collapsed": false
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": [
              {
                "name": "Konvertierung",
                "type": "any",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "converter.utm2ll(in.Ostwert, in.Nordwert, in.`UTM Zone`, converter.hemis)",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "converter.utm2ll(in.Ostwert, in.Nordwert, in.`UTM Zone`, converter.hemis)"
                }
              },
              {
                "name": "Koordinaten",
                "type": "any",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "converter.decdeg2deg(Konvertierung[:latitude_decimal],Konvertierung[:longitude_decimal])",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "converter.decdeg2deg(Konvertierung[:latitude_decimal],Konvertierung[:longitude_decimal])"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": true,
          "showOutputFields": true,
          "dialogWidth": "stretch"
        },
        "model": {}
      },
      "pos": {
        "x": 874,
        "y": 122
      }
    }
  ],
  "hops": [
    {
      "id": "29561f9f-987e-4714-a6c4-3a65f6267e16",
      "fromStep": "com.twineworks.tweakstreet.library.steps.input.csvinput_ea718cd8-0061-4c52-8bb8-ee72b6155f63",
      "toStep": "com.twineworks.tweakstreet.library.steps.streamlookup.streamlookup_366d5789-3eba-43c0-9874-2dd6507431b2",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "55812c00-0d6e-41ba-96bd-f376dbf8617f",
      "fromStep": "com.twineworks.tweakstreet.library.steps.flatmap.datatable_a61d6d93-5e8c-4dd7-ad61-566667f5cba6",
      "toStep": "com.twineworks.tweakstreet.library.steps.streamlookup.streamlookup_366d5789-3eba-43c0-9874-2dd6507431b2",
      "fromGate": "out",
      "toGate": "lookup",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "61164f26-edc4-40d8-ae6a-660dfa814ad1",
      "fromStep": "com.twineworks.tweakstreet.library.steps.streamlookup.streamlookup_366d5789-3eba-43c0-9874-2dd6507431b2",
      "toStep": "com.twineworks.tweakstreet.library.steps.map.calculator_eafb616b-532b-4d3b-a0c7-d55817c49e14",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "5ffd4806-bc4d-443b-8b71-e4c978fd3e89",
      "fromStep": "com.twineworks.tweakstreet.library.steps.map.calculator_867cc4b4-0057-435e-9fd3-1af49e691ea6",
      "toStep": "com.twineworks.tweakstreet.library.steps.map.dummy_9f319d65-576c-4ae5-bce6-f5ada276a956",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "f09e5a58-a2a5-4d4f-86f4-2308d6e37230",
      "fromStep": "com.twineworks.tweakstreet.library.steps.map.calculator_eafb616b-532b-4d3b-a0c7-d55817c49e14",
      "toStep": "com.twineworks.tweakstreet.library.steps.map.calculator_867cc4b4-0057-435e-9fd3-1af49e691ea6",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    }
  ]
}